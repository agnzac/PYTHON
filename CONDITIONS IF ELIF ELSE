----Statement 1 ----
/* Chocolate bar has the form of a rectangle divided into n×m
portions. Chocolate bar can be split into two rectangular parts by breaking it along a selected straight line on its pattern. Determine whether it is possible to split it so that one of the parts will have exactly k squares.
The program reads three integers: n, m, and k. It should print YES or NO.*/

n = int(input())
m = int(input())
k = int(input())
if k < n * m and ((k % n == 0) or (k % m == 0)):
    print('YES')
else:
    print('NO')

----Statement 2 ----
/*Given two integers A and B. Print all numbers from A to B inclusively, in ascending order, if A < B, or in descending order, if A ≥ B.*/

a=int(input())
b=int(input())
if a>=b:
    for i in range(a,b-1,-1):
        print(i)
else:
    for i in range(a,b+1):
        print(i)

----Statement 3 ----
/*10 numbers are given in the input. Read them and print their sum. Use as few variables as you can.*/

s = 0
for _ in range(10):
    a=int(input())
    s += a
print (s)

----Statement 4 ----
/*N numbers are given in the input. Read them and print their sum.
The first line of input contains the integer N, which is the number of integers to follow. Each of the next N lines contains one integer. Print the sum of these N integers.*/

N=int(input())
s = 0
for _ in range(N):
    a=int(input())
    s += a
print (s)

----Statement 5 ----

/*For the given integer N calculate the following sum:
13+23+…+N3*/

s = 0
n = int(input())
for i in range(1,n+1):
  s = (i ** 3)+ value
print(s)

----Statement 6 ----

/*In mathematics, the factorial of an integer n, denoted by n! is the following product:
n!=1×2×…×n
For the given integer n calculate the value n! Don't use math module in this exercise.*/

num = 0
fact = 1

for i in range(1, int(input()) + 1):
  fact *=i
print(fact)

Statement
In mathematics, the factorial of an integer n, denoted by n! is the following product:
n!=1×2×…×n

For the given integer n calculate the value n!. Don't use math module in this exercise.


res = 1
n = int(input())
for i in range(1, n + 1):
    res *= i
print(res)


----Statement 7 ----

Given N numbers: the first number in the input is N, after that N integers are given. Count the number of zeros among the given integers and print it.
You need to count the number of numbers that are equal to zero, not the number of zero digits.
n=int(input())
zero_count=0

for i in range (1,n+1):
    i=int(input())
    if i==0:
        zero_count+=1
print (zero_count)


----Statement 8 ----
Given an integer n, print the sum 1!+2!+3!+...+n!.
This problem has a solution with only one loop, so try to discover it. And don't use the math library.

n=int(input())
factorial=1
sum_of_fact=0

for i in range(1,n+1):
    factorial*=i
    sum_of_fact+=factorial
print (sum_of_fact)


----Statement 9 ----
For given integer n ≤ 9 print a ladder of n steps. The k-th step consists of the integers from 1 to k without spaces between them.
To do that, you can use the sep and end arguments for the function print().

n = int(input())
for i in range(1, n + 1):
    for j in range(1, i + 1):
        print(j, sep='', end='')
    print()


----Statement 10 ----
There was a set of cards with numbers from 1 to N. One of the card is now lost. Determine the number on that lost card given the numbers for the remaining cards.
Given a number N, followed by N − 1 integers - representing the numbers on the remaining cards (distinct integers in the range from 1 to N). Find and print the number on the lost card.
n = int(input())
sum_cards = 0
for i in range(1, n + 1):
    sum_cards += i
for i in range(n - 1):
    sum_cards -= int(input())
print(sum_cards)



